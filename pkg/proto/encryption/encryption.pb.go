// Code generated by protoc-gen-go. DO NOT EDIT.
// source: encryption/encryption.proto

package encryption // import "Open_IM/pkg/proto/encryption"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CommonResp struct {
	ErrCode              int32    `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonResp) Reset()         { *m = CommonResp{} }
func (m *CommonResp) String() string { return proto.CompactTextString(m) }
func (*CommonResp) ProtoMessage()    {}
func (*CommonResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_encryption_50e5f5c6d96b8d59, []int{0}
}
func (m *CommonResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonResp.Unmarshal(m, b)
}
func (m *CommonResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonResp.Marshal(b, m, deterministic)
}
func (dst *CommonResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonResp.Merge(dst, src)
}
func (m *CommonResp) XXX_Size() int {
	return xxx_messageInfo_CommonResp.Size(m)
}
func (m *CommonResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonResp.DiscardUnknown(m)
}

var xxx_messageInfo_CommonResp proto.InternalMessageInfo

func (m *CommonResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CommonResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type MsgContent struct {
	SendID               string   `protobuf:"bytes,1,opt,name=sendID" json:"sendID,omitempty"`
	RecvID               string   `protobuf:"bytes,2,opt,name=recvID" json:"recvID,omitempty"`
	GroupID              string   `protobuf:"bytes,3,opt,name=groupID" json:"groupID,omitempty"`
	SessionType          int32    `protobuf:"varint,4,opt,name=sessionType" json:"sessionType,omitempty"`
	MsgFrom              int32    `protobuf:"varint,5,opt,name=msgFrom" json:"msgFrom,omitempty"`
	ContentType          int32    `protobuf:"varint,6,opt,name=contentType" json:"contentType,omitempty"`
	Content              []byte   `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	KeyVersion           int32    `protobuf:"varint,8,opt,name=keyVersion" json:"keyVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgContent) Reset()         { *m = MsgContent{} }
func (m *MsgContent) String() string { return proto.CompactTextString(m) }
func (*MsgContent) ProtoMessage()    {}
func (*MsgContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_encryption_50e5f5c6d96b8d59, []int{1}
}
func (m *MsgContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgContent.Unmarshal(m, b)
}
func (m *MsgContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgContent.Marshal(b, m, deterministic)
}
func (dst *MsgContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgContent.Merge(dst, src)
}
func (m *MsgContent) XXX_Size() int {
	return xxx_messageInfo_MsgContent.Size(m)
}
func (m *MsgContent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgContent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgContent proto.InternalMessageInfo

func (m *MsgContent) GetSendID() string {
	if m != nil {
		return m.SendID
	}
	return ""
}

func (m *MsgContent) GetRecvID() string {
	if m != nil {
		return m.RecvID
	}
	return ""
}

func (m *MsgContent) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *MsgContent) GetSessionType() int32 {
	if m != nil {
		return m.SessionType
	}
	return 0
}

func (m *MsgContent) GetMsgFrom() int32 {
	if m != nil {
		return m.MsgFrom
	}
	return 0
}

func (m *MsgContent) GetContentType() int32 {
	if m != nil {
		return m.ContentType
	}
	return 0
}

func (m *MsgContent) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *MsgContent) GetKeyVersion() int32 {
	if m != nil {
		return m.KeyVersion
	}
	return 0
}

type EncryptContentReq struct {
	MsgContent           *MsgContent `protobuf:"bytes,1,opt,name=msgContent" json:"msgContent,omitempty"`
	RecvIDList           []string    `protobuf:"bytes,2,rep,name=recvIDList" json:"recvIDList,omitempty"`
	OperationID          string      `protobuf:"bytes,3,opt,name=operationID" json:"operationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *EncryptContentReq) Reset()         { *m = EncryptContentReq{} }
func (m *EncryptContentReq) String() string { return proto.CompactTextString(m) }
func (*EncryptContentReq) ProtoMessage()    {}
func (*EncryptContentReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_encryption_50e5f5c6d96b8d59, []int{2}
}
func (m *EncryptContentReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptContentReq.Unmarshal(m, b)
}
func (m *EncryptContentReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptContentReq.Marshal(b, m, deterministic)
}
func (dst *EncryptContentReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptContentReq.Merge(dst, src)
}
func (m *EncryptContentReq) XXX_Size() int {
	return xxx_messageInfo_EncryptContentReq.Size(m)
}
func (m *EncryptContentReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptContentReq.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptContentReq proto.InternalMessageInfo

func (m *EncryptContentReq) GetMsgContent() *MsgContent {
	if m != nil {
		return m.MsgContent
	}
	return nil
}

func (m *EncryptContentReq) GetRecvIDList() []string {
	if m != nil {
		return m.RecvIDList
	}
	return nil
}

func (m *EncryptContentReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type EncryptContentResp struct {
	CommonResp           *CommonResp   `protobuf:"bytes,1,opt,name=CommonResp" json:"CommonResp,omitempty"`
	MsgContentList       []*MsgContent `protobuf:"bytes,2,rep,name=msgContentList" json:"msgContentList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *EncryptContentResp) Reset()         { *m = EncryptContentResp{} }
func (m *EncryptContentResp) String() string { return proto.CompactTextString(m) }
func (*EncryptContentResp) ProtoMessage()    {}
func (*EncryptContentResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_encryption_50e5f5c6d96b8d59, []int{3}
}
func (m *EncryptContentResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptContentResp.Unmarshal(m, b)
}
func (m *EncryptContentResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptContentResp.Marshal(b, m, deterministic)
}
func (dst *EncryptContentResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptContentResp.Merge(dst, src)
}
func (m *EncryptContentResp) XXX_Size() int {
	return xxx_messageInfo_EncryptContentResp.Size(m)
}
func (m *EncryptContentResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptContentResp.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptContentResp proto.InternalMessageInfo

func (m *EncryptContentResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

func (m *EncryptContentResp) GetMsgContentList() []*MsgContent {
	if m != nil {
		return m.MsgContentList
	}
	return nil
}

type GetEncryptionKeyReq struct {
	OperationID          string   `protobuf:"bytes,1,opt,name=operationID" json:"operationID,omitempty"`
	OpUserID             string   `protobuf:"bytes,2,opt,name=opUserID" json:"opUserID,omitempty"`
	UserID               string   `protobuf:"bytes,3,opt,name=userID" json:"userID,omitempty"`
	GroupID              string   `protobuf:"bytes,4,opt,name=groupID" json:"groupID,omitempty"`
	KeyVersion           int32    `protobuf:"varint,5,opt,name=keyVersion" json:"keyVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEncryptionKeyReq) Reset()         { *m = GetEncryptionKeyReq{} }
func (m *GetEncryptionKeyReq) String() string { return proto.CompactTextString(m) }
func (*GetEncryptionKeyReq) ProtoMessage()    {}
func (*GetEncryptionKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_encryption_50e5f5c6d96b8d59, []int{4}
}
func (m *GetEncryptionKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEncryptionKeyReq.Unmarshal(m, b)
}
func (m *GetEncryptionKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEncryptionKeyReq.Marshal(b, m, deterministic)
}
func (dst *GetEncryptionKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEncryptionKeyReq.Merge(dst, src)
}
func (m *GetEncryptionKeyReq) XXX_Size() int {
	return xxx_messageInfo_GetEncryptionKeyReq.Size(m)
}
func (m *GetEncryptionKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEncryptionKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetEncryptionKeyReq proto.InternalMessageInfo

func (m *GetEncryptionKeyReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *GetEncryptionKeyReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *GetEncryptionKeyReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetEncryptionKeyReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *GetEncryptionKeyReq) GetKeyVersion() int32 {
	if m != nil {
		return m.KeyVersion
	}
	return 0
}

type VersionKey struct {
	Version              int32    `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionKey) Reset()         { *m = VersionKey{} }
func (m *VersionKey) String() string { return proto.CompactTextString(m) }
func (*VersionKey) ProtoMessage()    {}
func (*VersionKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_encryption_50e5f5c6d96b8d59, []int{5}
}
func (m *VersionKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionKey.Unmarshal(m, b)
}
func (m *VersionKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionKey.Marshal(b, m, deterministic)
}
func (dst *VersionKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionKey.Merge(dst, src)
}
func (m *VersionKey) XXX_Size() int {
	return xxx_messageInfo_VersionKey.Size(m)
}
func (m *VersionKey) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionKey.DiscardUnknown(m)
}

var xxx_messageInfo_VersionKey proto.InternalMessageInfo

func (m *VersionKey) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *VersionKey) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetEncryptionKeyResp struct {
	CommonResp           *CommonResp   `protobuf:"bytes,1,opt,name=CommonResp" json:"CommonResp,omitempty"`
	VersionKeyList       []*VersionKey `protobuf:"bytes,2,rep,name=versionKeyList" json:"versionKeyList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetEncryptionKeyResp) Reset()         { *m = GetEncryptionKeyResp{} }
func (m *GetEncryptionKeyResp) String() string { return proto.CompactTextString(m) }
func (*GetEncryptionKeyResp) ProtoMessage()    {}
func (*GetEncryptionKeyResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_encryption_50e5f5c6d96b8d59, []int{6}
}
func (m *GetEncryptionKeyResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEncryptionKeyResp.Unmarshal(m, b)
}
func (m *GetEncryptionKeyResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEncryptionKeyResp.Marshal(b, m, deterministic)
}
func (dst *GetEncryptionKeyResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEncryptionKeyResp.Merge(dst, src)
}
func (m *GetEncryptionKeyResp) XXX_Size() int {
	return xxx_messageInfo_GetEncryptionKeyResp.Size(m)
}
func (m *GetEncryptionKeyResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEncryptionKeyResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetEncryptionKeyResp proto.InternalMessageInfo

func (m *GetEncryptionKeyResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

func (m *GetEncryptionKeyResp) GetVersionKeyList() []*VersionKey {
	if m != nil {
		return m.VersionKeyList
	}
	return nil
}

type GenEncryptionKeyReq struct {
	OperationID          string   `protobuf:"bytes,1,opt,name=operationID" json:"operationID,omitempty"`
	OpUserID             string   `protobuf:"bytes,2,opt,name=opUserID" json:"opUserID,omitempty"`
	UserID               string   `protobuf:"bytes,3,opt,name=userID" json:"userID,omitempty"`
	GroupID              string   `protobuf:"bytes,4,opt,name=groupID" json:"groupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenEncryptionKeyReq) Reset()         { *m = GenEncryptionKeyReq{} }
func (m *GenEncryptionKeyReq) String() string { return proto.CompactTextString(m) }
func (*GenEncryptionKeyReq) ProtoMessage()    {}
func (*GenEncryptionKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_encryption_50e5f5c6d96b8d59, []int{7}
}
func (m *GenEncryptionKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenEncryptionKeyReq.Unmarshal(m, b)
}
func (m *GenEncryptionKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenEncryptionKeyReq.Marshal(b, m, deterministic)
}
func (dst *GenEncryptionKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenEncryptionKeyReq.Merge(dst, src)
}
func (m *GenEncryptionKeyReq) XXX_Size() int {
	return xxx_messageInfo_GenEncryptionKeyReq.Size(m)
}
func (m *GenEncryptionKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GenEncryptionKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_GenEncryptionKeyReq proto.InternalMessageInfo

func (m *GenEncryptionKeyReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *GenEncryptionKeyReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *GenEncryptionKeyReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GenEncryptionKeyReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

type GenEncryptionKeyResp struct {
	CommonResp           *CommonResp `protobuf:"bytes,1,opt,name=CommonResp" json:"CommonResp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GenEncryptionKeyResp) Reset()         { *m = GenEncryptionKeyResp{} }
func (m *GenEncryptionKeyResp) String() string { return proto.CompactTextString(m) }
func (*GenEncryptionKeyResp) ProtoMessage()    {}
func (*GenEncryptionKeyResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_encryption_50e5f5c6d96b8d59, []int{8}
}
func (m *GenEncryptionKeyResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenEncryptionKeyResp.Unmarshal(m, b)
}
func (m *GenEncryptionKeyResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenEncryptionKeyResp.Marshal(b, m, deterministic)
}
func (dst *GenEncryptionKeyResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenEncryptionKeyResp.Merge(dst, src)
}
func (m *GenEncryptionKeyResp) XXX_Size() int {
	return xxx_messageInfo_GenEncryptionKeyResp.Size(m)
}
func (m *GenEncryptionKeyResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GenEncryptionKeyResp.DiscardUnknown(m)
}

var xxx_messageInfo_GenEncryptionKeyResp proto.InternalMessageInfo

func (m *GenEncryptionKeyResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

func init() {
	proto.RegisterType((*CommonResp)(nil), "encryption.CommonResp")
	proto.RegisterType((*MsgContent)(nil), "encryption.MsgContent")
	proto.RegisterType((*EncryptContentReq)(nil), "encryption.EncryptContentReq")
	proto.RegisterType((*EncryptContentResp)(nil), "encryption.EncryptContentResp")
	proto.RegisterType((*GetEncryptionKeyReq)(nil), "encryption.GetEncryptionKeyReq")
	proto.RegisterType((*VersionKey)(nil), "encryption.VersionKey")
	proto.RegisterType((*GetEncryptionKeyResp)(nil), "encryption.GetEncryptionKeyResp")
	proto.RegisterType((*GenEncryptionKeyReq)(nil), "encryption.GenEncryptionKeyReq")
	proto.RegisterType((*GenEncryptionKeyResp)(nil), "encryption.GenEncryptionKeyResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Encryption service

type EncryptionClient interface {
	EncryptContent(ctx context.Context, in *EncryptContentReq, opts ...grpc.CallOption) (*EncryptContentResp, error)
	GetEncryptionKey(ctx context.Context, in *GetEncryptionKeyReq, opts ...grpc.CallOption) (*GetEncryptionKeyResp, error)
	GenUserEncryptionKey(ctx context.Context, in *GenEncryptionKeyReq, opts ...grpc.CallOption) (*GenEncryptionKeyResp, error)
}

type encryptionClient struct {
	cc *grpc.ClientConn
}

func NewEncryptionClient(cc *grpc.ClientConn) EncryptionClient {
	return &encryptionClient{cc}
}

func (c *encryptionClient) EncryptContent(ctx context.Context, in *EncryptContentReq, opts ...grpc.CallOption) (*EncryptContentResp, error) {
	out := new(EncryptContentResp)
	err := grpc.Invoke(ctx, "/encryption.encryption/EncryptContent", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *encryptionClient) GetEncryptionKey(ctx context.Context, in *GetEncryptionKeyReq, opts ...grpc.CallOption) (*GetEncryptionKeyResp, error) {
	out := new(GetEncryptionKeyResp)
	err := grpc.Invoke(ctx, "/encryption.encryption/GetEncryptionKey", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *encryptionClient) GenUserEncryptionKey(ctx context.Context, in *GenEncryptionKeyReq, opts ...grpc.CallOption) (*GenEncryptionKeyResp, error) {
	out := new(GenEncryptionKeyResp)
	err := grpc.Invoke(ctx, "/encryption.encryption/GenUserEncryptionKey", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Encryption service

type EncryptionServer interface {
	EncryptContent(context.Context, *EncryptContentReq) (*EncryptContentResp, error)
	GetEncryptionKey(context.Context, *GetEncryptionKeyReq) (*GetEncryptionKeyResp, error)
	GenUserEncryptionKey(context.Context, *GenEncryptionKeyReq) (*GenEncryptionKeyResp, error)
}

func RegisterEncryptionServer(s *grpc.Server, srv EncryptionServer) {
	s.RegisterService(&_Encryption_serviceDesc, srv)
}

func _Encryption_EncryptContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EncryptContentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EncryptionServer).EncryptContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/encryption.encryption/EncryptContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EncryptionServer).EncryptContent(ctx, req.(*EncryptContentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Encryption_GetEncryptionKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEncryptionKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EncryptionServer).GetEncryptionKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/encryption.encryption/GetEncryptionKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EncryptionServer).GetEncryptionKey(ctx, req.(*GetEncryptionKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Encryption_GenUserEncryptionKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenEncryptionKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EncryptionServer).GenUserEncryptionKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/encryption.encryption/GenUserEncryptionKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EncryptionServer).GenUserEncryptionKey(ctx, req.(*GenEncryptionKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Encryption_serviceDesc = grpc.ServiceDesc{
	ServiceName: "encryption.encryption",
	HandlerType: (*EncryptionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EncryptContent",
			Handler:    _Encryption_EncryptContent_Handler,
		},
		{
			MethodName: "GetEncryptionKey",
			Handler:    _Encryption_GetEncryptionKey_Handler,
		},
		{
			MethodName: "GenUserEncryptionKey",
			Handler:    _Encryption_GenUserEncryptionKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "encryption/encryption.proto",
}

func init() {
	proto.RegisterFile("encryption/encryption.proto", fileDescriptor_encryption_50e5f5c6d96b8d59)
}

var fileDescriptor_encryption_50e5f5c6d96b8d59 = []byte{
	// 521 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x54, 0xdd, 0x6a, 0x13, 0x41,
	0x14, 0x66, 0x92, 0x26, 0x6d, 0x4e, 0xa5, 0xd4, 0x51, 0xca, 0x10, 0xb1, 0x2e, 0x7b, 0x63, 0xbc,
	0x69, 0xa0, 0x82, 0x08, 0x42, 0x2f, 0x4c, 0xaa, 0x84, 0x1a, 0x0b, 0x83, 0x15, 0xf4, 0x46, 0x34,
	0x3d, 0x2c, 0x21, 0xec, 0xcc, 0x38, 0xb3, 0x0d, 0xec, 0x03, 0x78, 0xe7, 0xcf, 0x53, 0xf8, 0x7a,
	0x3e, 0x83, 0xcc, 0xec, 0x64, 0x77, 0xb2, 0xdb, 0xc6, 0x0b, 0x05, 0xef, 0xe6, 0x3b, 0xe7, 0x7c,
	0x67, 0xbf, 0xf3, 0xcd, 0xd9, 0x81, 0x7b, 0x28, 0x66, 0x3a, 0x57, 0xd9, 0x5c, 0x8a, 0x61, 0x75,
	0x3c, 0x52, 0x5a, 0x66, 0x92, 0x42, 0x15, 0x89, 0x4f, 0x00, 0x46, 0x32, 0x4d, 0xa5, 0xe0, 0x68,
	0x14, 0x65, 0xb0, 0x8d, 0x5a, 0x8f, 0xe4, 0x25, 0x32, 0x12, 0x91, 0x41, 0x87, 0xaf, 0x20, 0x3d,
	0x80, 0x2e, 0x6a, 0x3d, 0x35, 0x09, 0x6b, 0x45, 0x64, 0xd0, 0xe3, 0x1e, 0xc5, 0xbf, 0x08, 0xc0,
	0xd4, 0x24, 0x23, 0x29, 0x32, 0x14, 0x99, 0x2d, 0x33, 0x28, 0x2e, 0x27, 0x63, 0xc7, 0xef, 0x71,
	0x8f, 0x6c, 0x5c, 0xe3, 0x6c, 0x39, 0x19, 0xaf, 0xe8, 0x05, 0xb2, 0x1f, 0x4c, 0xb4, 0xbc, 0x52,
	0x93, 0x31, 0x6b, 0xbb, 0xc4, 0x0a, 0xd2, 0x08, 0x76, 0x0d, 0x1a, 0x33, 0x97, 0xe2, 0x4d, 0xae,
	0x90, 0x6d, 0x39, 0x39, 0x61, 0xc8, 0x72, 0x53, 0x93, 0xbc, 0xd0, 0x32, 0x65, 0x9d, 0x42, 0xac,
	0x87, 0x96, 0x3b, 0x2b, 0x04, 0x39, 0x6e, 0xb7, 0xe0, 0x06, 0x21, 0xcb, 0xf5, 0x90, 0x6d, 0x47,
	0x64, 0x70, 0x8b, 0xaf, 0x20, 0x3d, 0x04, 0x58, 0x60, 0xfe, 0x16, 0xb5, 0xfd, 0x0e, 0xdb, 0x71,
	0xd4, 0x20, 0x12, 0x7f, 0x23, 0x70, 0xfb, 0xb4, 0xf0, 0xcf, 0x0f, 0xcd, 0xf1, 0x33, 0x7d, 0x02,
	0x90, 0x96, 0x2e, 0xb8, 0xd9, 0x77, 0x8f, 0x0f, 0x8e, 0x02, 0xe7, 0x2b, 0x8f, 0x78, 0x50, 0x69,
	0xbf, 0x56, 0x38, 0xf1, 0x6a, 0x6e, 0x32, 0xd6, 0x8a, 0xda, 0x83, 0x1e, 0x0f, 0x22, 0x76, 0x12,
	0xa9, 0x50, 0x7f, 0xb4, 0x3d, 0x4a, 0x8f, 0xc2, 0x50, 0xfc, 0x95, 0x00, 0xad, 0xeb, 0x31, 0xca,
	0x0a, 0xaa, 0xee, 0xf5, 0x3a, 0x41, 0x55, 0x96, 0x87, 0x1b, 0x70, 0x02, 0x7b, 0x95, 0xbc, 0x52,
	0xd4, 0xcd, 0xc3, 0xd4, 0xaa, 0xe3, 0x9f, 0x04, 0xee, 0xbc, 0xc4, 0xec, 0xb4, 0x2c, 0x3e, 0xc3,
	0xdc, 0x1a, 0x54, 0x1b, 0x84, 0x34, 0x06, 0xa1, 0x7d, 0xd8, 0x91, 0xea, 0xc2, 0xa0, 0x2e, 0x97,
	0xa4, 0xc4, 0x76, 0x7d, 0xae, 0x8a, 0x4c, 0xe1, 0x80, 0x47, 0xe1, 0xfa, 0x6c, 0xad, 0xaf, 0xcf,
	0xfa, 0x35, 0x76, 0x1a, 0xd7, 0xf8, 0x14, 0xc0, 0x1f, 0xcf, 0x30, 0xb7, 0x7d, 0x96, 0xbe, 0xd4,
	0xef, 0xbd, 0x87, 0x74, 0x1f, 0xda, 0x0b, 0xcc, 0xbd, 0x20, 0x7b, 0x8c, 0xbf, 0x13, 0xb8, 0xdb,
	0x9c, 0xf0, 0xef, 0x2c, 0x5f, 0x96, 0x52, 0x6e, 0xb2, 0xbc, 0x12, 0xcb, 0x6b, 0xd5, 0xf1, 0x17,
	0x67, 0xb9, 0xf8, 0xdf, 0x96, 0xc7, 0xaf, 0xad, 0x2f, 0xe2, 0x9f, 0xf9, 0x72, 0xfc, 0xa3, 0x05,
	0xc1, 0x4b, 0x45, 0xcf, 0x61, 0x6f, 0x7d, 0xcf, 0xe9, 0xfd, 0xb0, 0x49, 0xe3, 0x9f, 0xec, 0x1f,
	0x6e, 0x4a, 0x1b, 0x45, 0x2f, 0x60, 0xbf, 0x7e, 0x8f, 0xf4, 0x41, 0xc8, 0xb9, 0x66, 0x8f, 0xfb,
	0xd1, 0xe6, 0x02, 0xa3, 0xe8, 0x3b, 0x67, 0x83, 0x75, 0x71, 0x63, 0x6b, 0xf1, 0xa7, 0xd6, 0x4d,
	0x27, 0x9f, 0x3f, 0x7a, 0xff, 0xf0, 0x5c, 0xa1, 0xf8, 0x30, 0x99, 0x0e, 0xd5, 0x22, 0x19, 0xba,
	0xd7, 0x3c, 0x78, 0xde, 0x9f, 0x55, 0xc7, 0x4f, 0x5d, 0x97, 0x7c, 0xfc, 0x3b, 0x00, 0x00, 0xff,
	0xff, 0x7d, 0x0a, 0x4d, 0x17, 0x09, 0x06, 0x00, 0x00,
}
